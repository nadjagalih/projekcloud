name: Deploy Flask to Azure App Service  # Nama workflow

on:
  push:
    branches: [ "main" ]  # Trigger saat push ke branch main
  workflow_dispatch:     # Memungkinkan manual trigger dari GitHub UI

env:
  OWM_API_KEY: ${{ secrets.OWM_API_KEY }}  # Gunakan secret untuk API Key
  FLASK_ENV: "production"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # OS runner

    steps:
    # -----------------------------------
    # STEP 1: Checkout kode dari repo
    # -----------------------------------
    - name: Checkout repository
      uses: actions/checkout@v4

    # -----------------------------------
    # STEP 2: Setup Python environment
    # -----------------------------------
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # -----------------------------------
    # STEP 3: Install dependencies
    # -----------------------------------
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install gunicorn  # Required for Azure

    # -----------------------------------
    # STEP 4: Build step (opsional)
    # -----------------------------------
    - name: Build static files (jika ada)
      run: |
        echo "No build step needed for basic Flask app"
        # Jika menggunakan webpack/asset compiler, tambahkan di sini

    # -----------------------------------
    # STEP 5: Deploy ke Azure
    # -----------------------------------
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}  # Nama app di Azure
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}  # Profile auth
        package: '.'  # Deploy seluruh folder

    # -----------------------------------
    # STEP 6: Set environment variables di Azure
    # -----------------------------------
    - name: Configure Azure App Settings
      uses: azure/CLI@v1
      with:
        azcliversion: 2.40.0
        inlineScript: |
          az webapp config appsettings set \
            --name ${{ secrets.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
              OWM_API_KEY="${{ secrets.OWM_API_KEY }}" \
              FLASK_ENV="production" \
              WEBSITES_PORT=8000  # Port harus match dengan App.py
